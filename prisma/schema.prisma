datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

model User {
  id                            String         @id @default(auto()) @map("_id") @db.ObjectId
  email                         String         @unique
  username                      String?        @unique
  name                          String
  hashed_password               String?
  emailVerified                 String?
  phone                         String?
  image                         String?
  imageAlt                      String?
  account                       Account[]
  date_created                  DateTime      @default(now())
}



model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Daycares {
  id                String        @id @default(auto()) @map("_id") @db.ObjectId
  slug              String?       @unique
  isReadyToDisplay  Boolean       @default(false)
  ownerName         String?
  ownerEmail        String        @unique
  name              String?
  email             String? 
  phone             String?      
  neighborhood      String?
  cityName          String?
  state             String?
  country           Country?
  zip               String?
  website           String?
  images            String[]
  description       String?
  licensingStatus   Boolean?
  highlights        String[]
  testimonials      Testimonial[]
  ownerPhoto        String?
  openingTime       String?
  closingTime       String?
  firstDay          String?
  lastDay           String?
  capacity          Int?
  minimumAgeMonths  Int?
  maximumAgeYears   Int?
  daycareSpots      DaycareSpot[]
  date_created      DateTime      @default(now())
  cityId            String?       @db.ObjectId
  city              CanadaCities?  @relation(fields: [cityId], references: [id])
}

enum Country {
  USA
  CANADA
}


type DaycareSpot {
  spotsAvailable    Int
  minAgeMonths      Int
  maxAgeYears       Int
  pricePerMonth     Int
  startingDate      DateTime
  status            Status        @default(ACTIVE)
  date_created      DateTime      @default(now())
}

enum Status {
  ACTIVE
  INACTIVE
  PENDING
}


type Testimonial {
  customerName                  String
  image                         String?
  text                          String?
  rating                        Int
  childAgeMonths                Int?
  childAgeYears                 Int?
  date_created              DateTime      @default(now())
}

model CanadaCities {
  id            String  @id @map("_id") @db.ObjectId
  cityName      String
  provinceAbr   String
  provinceName  String
  slug          String
  daycares      Daycares[] 
}



